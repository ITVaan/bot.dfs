[buildout]
extensions = mr.developer
parts =
    scripts
    circus
    circusd
    circusctl
    circus.ini
    redis_db_dir
    redis.cfg
    dfs_bot.yaml
eggs =
    chaussette
    pyramid
    request_id_middleware
    server_cookie_middleware
find-links =
    http://op:x9W3jZ@dist.quintagroup.com/op/

[remotes]
gh = https://github.com/
gh_push = git@github.com:
opgh = ${remotes:gh}openprocurement/openprocurement
opgh_push = ${remotes:gh_push}openprocurement/openprocurement
itivan = ${remotes:gh}ITVaan/openprocurement

[scripts]
recipe = zc.recipe.egg
eggs = ${buildout:eggs}
interpreter = python
scripts =
    chaussette
    nosetests
    circusd

[sources]
openprocurement_client = git https://github.com/openprocurement/openprocurement.client.python.git

[config-from-template]
recipe = collective.recipe.template[genshi]:genshi
input = ${buildout:directory}/templates/${:_buildout_section_name_}
output = ${buildout:directory}/etc/${:_buildout_section_name_}

[circus]
recipe = zc.recipe.egg
eggs =
    circus
    circus-web
interpreter =
scripts =
    circusd-stats
    circus-top
    circus-plugin
    circushttpd

[couchpy]
<=circus
eggs = CouchDB
scripts =
    couchpy
    couchdb-replicate

[circusd]
<=circus
initialization =
    sys.argv[1:1] = ('${buildout:directory}/etc/circus.ini').split()
scripts = circusd

[circusctl]
<=circus
initialization =
    sys.argv[1:1] = ('--endpoint ${circus.ini:endpoint}').split()
scripts = circusctl

[circus.ini]
<= config-from-template
statsd = True
service = True
service_port = 6555
service_host = 0.0.0.0
dfs_bot = True
redis = True
endpoint = ipc://${buildout:directory}/var/circus_endpoint
pubsub_endpoint = ipc://${buildout:directory}/var/circus_pubsub
timezone = Europe/Kiev

[dfs_bot.yaml]
<= config-from-template
tenders_api_server = http://0.0.0.0:6543
tenders_api_version = 2.3
public_tenders_api_server = http://0.0.0.0:6543
api_token = bot
buffers_size = 500
full_stack_sync_delay = 15
empty_stack_sync_delay = 101
on_error_sleep_delay = 5
delay = 15
increment_step = 1
decrement_step = 1
doc_service_server = http://0.0.0.0
doc_service_port = 6555
doc_service_user = broker
doc_service_password = broker
cache_db_name = "redis"
cache_host = localhost
cache_port = 6379
time_to_live = 1000
time_to_live_negative = 200

[redis_db_dir]
recipe = z3c.recipe.mkdir
paths = ${buildout:directory}/var/redis

[redis.cfg]
<= config-from-template
port = ${dfs_bot.yaml:cache_port}
dir = ${buildout:directory}/var/redis
logfile = ${buildout:directory}/var/log/redis.log

[logrotate.conf]
<= config-from-template
logs_bucket =
logs_dir =
aws_access_key = ${openprocurement.api.ini:aws_access_key}
aws_secret_key = ${openprocurement.api.ini:aws_secret_key}

[logrotate-hourly]
recipe = z3c.recipe.usercrontab
times = @hourly
command = /usr/sbin/logrotate --state ${buildout:directory}/var/logrotate.status ${logrotate.conf:output} >>${buildout:directory}/var/log/logrotate.log 2>&1
