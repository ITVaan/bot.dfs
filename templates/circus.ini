[circus]
check_delay = 5
endpoint = ${options['endpoint']}
pubsub_endpoint = ${options['pubsub_endpoint']}
umask = 002
logoutput = ${parts.buildout.directory}/var/log/circus.log
{% if 'httpd' in options and options['httpd'] %}
httpd = 1
httpd_host = ${options['httpd_host']}
httpd_port = ${options['httpd_port']}
{% end %}
statsd = ${options['statsd']}

{% if options['dfs_bot'] %}
[watcher:dfs_bot]
;cmd = {% if 'dfs_bot' in options and options['dfs_bot']%}consul lock ${options['dfs_bot']}{% end %} ${parts.buildout.directory}/bin/bot_dfs
cmd = ${parts.buildout.directory}/bin/bot_dfs
args = ${parts.buildout.directory}/etc/dfs_bot.yaml
shell = True
copy_env = True
stdout_stream.class = FileStream
stdout_stream.filename = ${parts.buildout.directory}/var/log/dfs_bot.stdout.log
stdout_stream.max_bytes = 134217728
stdout_stream.backup_count = 1
stderr_stream.class = FileStream
stderr_stream.filename = ${parts.buildout.directory}/var/log/dfs_bot.stderr.log
stderr_stream.max_bytes = 134217728
stderr_stream.backup_count = 1
{% end %}

{% if 'redis' in options and options['redis'] %}
[watcher:redis]
cmd = redis-server
args = ${parts.buildout.directory}/etc/redis.cfg
priority = 100
stdout_stream.class = FileStream
stderr_stream.class = FileStream
stdout_stream.filename = ${parts.buildout.directory}/var/log/redis.stdout.log
stderr_stream.filename = ${parts.buildout.directory}/var/log/redis.stderr.log

[env:redis]
PATH = /usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:$$PATH
{% end %}
